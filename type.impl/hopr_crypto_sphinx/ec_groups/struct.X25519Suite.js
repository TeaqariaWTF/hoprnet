(function() {var type_impls = {
"core_packet":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SphinxSuite-for-X25519Suite\" class=\"impl\"><a href=\"#impl-SphinxSuite-for-X25519Suite\" class=\"anchor\">§</a><h3 class=\"code-header\">impl SphinxSuite for X25519Suite</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.P\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.P\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">P</a> = OffchainKeypair</h4></section></summary><div class='docblock'>Keypair corresponding to the EC group</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.E\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.E\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">E</a> = Scalar</h4></section></summary><div class='docblock'>Scalar type supported by the EC group</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.G\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.G\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">G</a> = MontgomeryPoint</h4></section></summary><div class='docblock'>EC group element</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_shared_keys\" class=\"method trait-impl\"><a href=\"#method.new_shared_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_shared_keys</a>(\n    public_keys: &amp;[&lt;Self::P as Keypair&gt;::Public]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;SharedKeys&lt;Self::E, Self::G&gt;, CryptoError&gt;</h4></section></summary><div class='docblock'>Convenience function to generate shared keys from the path of public keys.</div></details></div></details>","SphinxSuite","core_packet::packet::CurrentSphinxSuite"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()